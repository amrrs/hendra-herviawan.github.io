<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>M Hendra Herviawan ~ Homepage on M Hendra Herviawan~Blog</title>
    <link>/</link>
    <description>Recent content in M Hendra Herviawan ~ Homepage on M Hendra Herviawan~Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Mar 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
    <item>
      <title>Customer Segmentation using RFM Analysis</title>
      <link>/blog/customer-segmentation-using-rfm-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/customer-segmentation-using-rfm-analysis/</guid>
      <description>M Hendra Herviawan  Project Overview According to wikipedia.org, “RFM is a method used for analyzing customer value”.
RFM stands for the three dimensions:
 Recency – How recently did the customer purchase? Frequency – How often do they purchase? Monetary Value – How much do they spend?  The resulting segments can be ordered from most valuable (highest recency, frequency, and value) to least valuable (lowest recency, frequency, and value).</description>
    </item>
    
    <item>
      <title>MNIST Hand writing recognition with Keras</title>
      <link>/tutorial/neural-network/mnist_handwriting_recognition_with_keras/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/neural-network/mnist_handwriting_recognition_with_keras/</guid>
      <description>M Hendra Herviawan Project Overview &amp;hellip;
# Build the model of a logistic classifier import os import gzip import six.moves.cPickle as pickle import numpy as np from keras.models import Sequential from keras.layers import Dense, Activation, Dropout from keras.datasets import mnist from keras.utils import np_utils  Using TensorFlow backend. /home/x/.local/bin/intelpython3/lib/python3.6/importlib/_bootstrap.py:205: RuntimeWarning: compiletime version 3.5 of module &#39;tensorflow.python.framework.fast_tensor_util&#39; does not match runtime version 3.6 return f(*args, **kwds)  Preparing the Data We can learn the basics of Keras by walking through a simple example: recognizing handwritten digits from the MNIST dataset.</description>
    </item>
    
    <item>
      <title>MNIST Hand writing recognition with Pytorch</title>
      <link>/tutorial/neural-network/mnist_handwriting_recognition_with_pytorch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/neural-network/mnist_handwriting_recognition_with_pytorch/</guid>
      <description>M Hendra Herviawan Project Overview &amp;hellip;
import torch import torch.nn as nn import torchvision.transforms as transforms import torchvision.datasets as dsets from torch.autograd import Variable  LOADING DATASET train_dataset = dsets.MNIST(root=&#39;./data&#39;, train=True, transform=transforms.ToTensor(), download=True) test_dataset = dsets.MNIST(root=&#39;./data&#39;, train=False, transform=transforms.ToTensor())  Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz Downloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz Downloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz Downloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz Processing... Done!  MAKING DATASET ITERABLE batch_size = 100 n_iters = 3000 num_epochs = n_iters / (len(train_dataset) / batch_size) num_epochs = int(num_epochs) train_loader = torch.</description>
    </item>
    
    <item>
      <title>Market Basket Analysis using Word2Vec</title>
      <link>/blog/market-basket-analysis-using-word2vec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/market-basket-analysis-using-word2vec/</guid>
      <description>M Hendra Herviawan Project Overview Market Basket Analysis is a modelling technique based upon the theory that if you buy a certain group of items, you are more (or less) likely to buy another group of items.
# This Python 3 environment comes with many helpful analytics libraries installed # It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python # For example, here&#39;s several helpful packages to load in import pandas as pd import numpy as np import gensim from matplotlib import pyplot as plt from sklearn.</description>
    </item>
    
    <item>
      <title>Recomendation system using Item Based Collaboratife Filtering (ICBF) Algorithma</title>
      <link>/blog/recomendation-system-using-item-based-collaboratife-filtering-icbf-algorithma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/recomendation-system-using-item-based-collaboratife-filtering-icbf-algorithma/</guid>
      <description>M Hendra Herviawan  Project Overview This is a transnational data set which contains all the transactions occurring between 01/12/2010 and 09/12/2011 for a UK-based and registered non-store online retail.The company mainly sells unique all-occasion gifts. Many customers of the company are wholesalers.
The following libraries were used in this project:
#setwd(&amp;quot;~/Documents/Kaggle/ecommerce-data/eda&amp;quot;) library(methods) library(recommenderlab) library(data.table) library(ggplot2) library(knitr)  Data Pre-preprocessing Some pre-processing of the data available is required before creating the recommendation system.</description>
    </item>
    
    <item>
      <title>Univariate logistic regression with Tensorflow</title>
      <link>/tutorial/neural-network/univariate_logistic_regression_with_tensorflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/neural-network/univariate_logistic_regression_with_tensorflow/</guid>
      <description>M Hendra Herviawan Project Overview Logistic regression adalah model statistical untuk menganalisa data dimana terdapat satu atau lebih independent variable dan mengeluarkan Output dichotomi variable (hanya terdapat dua kemungkinan). Sebuah Neuron pada Neural network merupakan Logistic regression yang menerima satu atau lebih input dan mengeluarkan probabilitas antara 0 dan 1.
import os os.environ[&amp;quot;CUDA_DEVICE_ORDER&amp;quot;] = &amp;quot;PCI_BUS_ID&amp;quot; # see issue #152 os.environ[&amp;quot;CUDA_VISIBLE_DEVICES&amp;quot;] = &amp;quot;&amp;quot;  import numpy as np import pandas as pd from sklearn import datasets, metrics, preprocessing from sklearn.</description>
    </item>
    
  </channel>
</rss>